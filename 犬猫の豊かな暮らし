#ソフトウェアの動作環境...IDLE,python-3,7,4-macosx10.9.pkg
import tkinter as tk
import random as r

def A():
    labelD=tk.Label(frame,text="あなたが飼っている動物はなんですか")
    labelD.pack(fill="x")
    
    clicE=tk.Button(frame,text=("ねこ"))
    clicE["command"]=D_neko
    clicE.pack(fill="x")

    clicF=tk.Button(frame,text=("いぬ"))
    clicF["command"]=D_inu
    clicF.pack(fill="x")

def B():
    labelD=tk.Label(frame,text="あなたが飼っている動物はなんですか")
    labelD.pack()
    
    clicE=tk.Button(frame,text=("ねこ"))
    clicE["command"]=E_neko
    clicE.pack(fill="x")

    clicF=tk.Button(frame,text=("いぬ"))
    clicF["command"]=E_inu
    clicF.pack(fill="x")

def C():
    labelD=tk.Label(frame,text="あなたが飼っている動物はなんですか")
    labelD.pack(fill="x")
    
    clicE=tk.Button(frame,text=("ねこ"))
    clicE["command"]=F_neko
    clicE.pack(fill="x")

    clicF=tk.Button(frame,text=("いぬ"))
    clicF["command"]=F_inu
    clicF.pack(fill="x")

def D_neko1(user,quiz_listA,kaisu,true):
    kaisuA=kaisu
    def D_neko1_1():
        nonlocal kaisuA
        trueA=true
        #6問出すまで続ける
        if kaisuA<5:
            quizA=quiz_listA[kaisuA]
            ans=quizA[5]
            #答え合わせ
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text="正解！\n"+quizA[6])
                label.pack()
                
            else:
                label=tk.Label(frame,text="不正解...正解は"+quizA[ans]+"\n"+quizA[6])
                label.pack()
                

            #問題を出す
            kaisuA+=1
            quizA=quiz_listA[kaisuA]
            label=tk.Label(frame,text="[問題"+str(kaisuA+1)+"]\n"+quizA[0])
            label.pack()

            for b in range(4):#選択肢を４回だす
                b+=1
                clic=tk.Button(frame,text=str(b)+":"+quizA[b])
                clic["command"]=D_neko1(b,quiz_listA,kaisuA,trueA,)
                clic.pack(fill="x")

        else:
            quizA=quiz_listA[kaisuA]
            ans=quizA[5]
            #答え合わせ
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text="正解！\n"+quizA[6])
                label.pack()
                
            else:
                label=tk.Label(frame,text="不正解...正解は"+quizA[ans]+"\n"+quizA[6])
                label.pack()
            
            #結果を集計
            label=tk.Label(frame,text="あなたの成績は...6問中"+str(trueA)+"問正解です。")
            label.pack()
            clic=tk.Button(frame,text="終了する",command=fin)
            clic.pack(fill="x")
    
    #呼び出し元へ戻る
    return D_neko1_1

def D_neko():
    quiz_list=[
        ["混合ワクチンを最初の接種時期はいつでしょう","生まれてすぐ","生後2~3ヶ月","生後5~6ヶ月","生後6~7ヶ月",2,"母親の母乳からもらった抗体が切れていることを想定して、この時期にワクチンを接種します。"],
        ["次のうち肥満と判断されるのはどれでしょう(体脂肪率)","24%","30%","43%","35%",4,"肥満の状態だと病気になりやすくなったり、足腰のけがにつながります。\n判断方法は、肋骨あたりをグッと推すことで判断します。肋骨が確認できなかったら肥満です。"],
        ["次のうち痩せていると判断されるのはどれでしょう(体脂肪率)","5%","13%","16%","20%",1,"痩せている状態だと、病気になってご飯が食べられない時にエネルギーがなくなり苦しい闘病生活になります。\n判断方法は、肋骨あたりをグッと押すことで判断します。撫でただけで肋骨が確認できたら痩せすぎです。"],
        ["三種混合ワクチンはどのような猫に打つのが良いでしょうか","少しだが外に出歩く猫","1日中外に出る猫","家の中で生活している猫","長い時で2~3日外に出る猫",3,"外に出ない猫は三種類でもいいと言われていますが、母猫や兄弟猫の健康状態、他猫との接触状況、\n育成環境などによって必要なワクチンが異なるので、獣医さんに相談した上で接種時期や種類を決めてください。"],
        ["混合ワクチンの2回目の接種時期(最初の接種時期から考えて)はいつでしょう","5ヶ月後","1ヶ月後","3ヶ月後","10ヶ月後",2,"前回のワクチンによる抗体が十分にできていない可能性があるので、再度ワクチンを接種します。"],
        ["混合ワクチンは生猫してからどのくらいの頻度で接種するべきでしょうか","1年に1回","2年に1回","5年に1回","7年に1回",1,"1度できた抗体を身体から無くさないで維持するためにします。"],
        ["伝染病対策ができる方法はワクチン以外にどれでしょう","初めから持っている抗体","ご飯と適度な運動","治療薬","ない",4,"伝染病に対する有効な治療薬などは無く、ワクチンを接種する以外に対策方法はありません。"],
        ["ワクチンを接種するのは1日でいつがいいでしょう","午前","午後","ご飯をあげてから2時間後","いつでも良い",1,"薬にはほぼ全てに副作用,副反応があるため、悪影響が出た時にすぐ対処できるようにするため。"],
        ["ワクチン接種後に気をつければならない事はどれでしょう","1~2時間ご飯をあげてはいけない","2~3週間他の猫との接触を避ける","1週間激しい運動を控える","1ヶ月激しい運動を控える",2,"ワクチンによる抗体ができるには2~3間ほど必要なので、その間は外に出さず他の猫との接触を避けたほうが無難だからです。"],
        ["ワクチンを同じ場所に注射してはいけないのだが、それは何故か","副作用が出やすくなるから","ワクチンの効果が効きにくくなるから","肉腫(ガン)ができやすくなるから","返って病気にかかりやすくなってしまうから",3,"病気の対策に来ているのに病気になるのは嫌なので、ワクチンを接種する時は前回どこに打ったのか覚えておきましょう。"],
        ]
    
    a=0
    r.shuffle(quiz_list)

    #問題のタイトルの表示
    true=0
    quiz=quiz_list[0]
    label=tk.Label(frame,text="[問題"+str(a+1)+"]\n"+quiz[0])
    label.pack()
        
    for b in range(4):#解答を４回だす
        b+=1
        clic=tk.Button(frame,text=str(b)+":"+quiz[b])
        clic["command"]=D_neko1(b,quiz_list,a,true)
        clic.pack(fill="x")

def D_inu1(user,quiz_listA,kaisu,true):
    kaisuA=kaisu
    def D_inu1_1():
        nonlocal kaisuA
        trueA=true
        #6問出すまで続ける
        if kaisuA<5:
            quizA=quiz_listA[kaisuA]
            ans=quizA[5]
            #答え合わせ
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text="正解！\n"+quizA[6])
                label.pack()
                
            else:
                label=tk.Label(frame,text="不正解...正解は"+quizA[ans]+"\n"+quizA[6])
                label.pack()
                

            #問題を出す
            kaisuA+=1
            quizA=quiz_listA[kaisuA]
            label=tk.Label(frame,text="[問題"+str(kaisuA+1)+"]\n"+quizA[0])
            label.pack()

            for b in range(4):#選択肢を４回だす
                b+=1
                clic=tk.Button(frame,text=str(b)+":"+quizA[b])
                clic["command"]=D_inu1(b,quiz_listA,kaisuA,trueA,)
                clic.pack(fill="x")

        else:
            quizA=quiz_listA[kaisuA]
            ans=quizA[5]
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text="正解！\n"+quizA[6])
                label.pack()
                
            else:
                label=tk.Label(frame,text="不正解...正解は"+quizA[ans]+"\n"+quizA[6])
                label.pack()
            
            label=tk.Label(frame,text="あなたの成績は...6問中"+str(trueA)+"問正解です。")
            label.pack()
            clic=tk.Button(frame,text="終了する",command=fin)
            clic.pack(fill="x")

    #呼び出し元へ戻る
    return D_inu1_1

def D_inu():
    quiz_list=[
        ["子犬のコアワクチンを打つ最初の時期はいつでしょう","生まれてすぐ","生後1~2ヶ月","生後4~5ヶ月","生後8ヶ月",2,"母親の母乳からもらった抗体が切れていることを想定して、この時期にワクチンを接種します。"],
        ["狂犬病予防注射を打つのはどのくらいの頻度で打つべきでしょうか","1年に1回","1年に2回","2年に1回","4年に1回",1,"発症した場合には100%死亡する病気です。日本では生後3ヶ月以降のすべての犬に対して義務付けられています。"],
        ["子犬のコアワクチンを打つ2~3回目の時期はいつでしょう(前回打った時期から考えて)","2~3週間後","3~4週間後","5~6週間後","7~8週間後",2,"前回のワクチンによる抗体が十分にできていない可能性があるので、再度ワクチンを接種します。"],
        ["子犬のコアワクチンを打つ3~4回目の時期はいつでしょう(前回打った時期から考えて)","2~3週間後","3~4週間後","5~6週間後","7~8週間後",2,"大部分の子犬がワクチンによってしっかり抗体を作り出せると考えられる生後4ヶ月、もしくはそれ以降に最後のワクチン接種を行うことが推奨されています。"],
        ["フィラリア予防はどれくらいの頻度ですれば良いでしょう(お薬タイプ)","1ヶ月に1回(5月~12月)","1ヶ月に1回(1年中)","2ヶ月に1回(1年中)","半年に1回",1,"蚊が活動する時期は毎年予防しましょう。感染すると咳が出たり運動量が低下します。突然元気が無くなったり血尿が現れる急性症では一晩で死に至ることもあります。\nお薬タイプのデメリットは錠剤が苦手な子に不向きなところです。"],
        ["フィラリア予防はどれくらいの頻度ですれば良いでしょう(お肉タイプ)","1ヶ月に1回(5月~12月)","1ヶ月に1回(1年中)","2ヶ月に1回(1年中)","半年に1回",1,"蚊が活動する時期は毎年予防しましょう。感染すると咳が出たり運動量が低下します。突然元気が無くなったり血尿が現れる急性症では一晩で死に至ることもあります。\nお肉タイプのデメリットは薬が少し大きめでかけらも全て食べなければいけないところです。"],
        ["フィラリア予防はどれくらいの頻度ですれば良いでしょう(注射タイプ)","1ヶ月に1回(5月~12月)","1ヶ月に1回(1年中)","半年に1回","1年に1回",4,"感染すると咳が出たり運動量が低下します。突然元気が無くなったり血尿が現れる急性症では一晩で死に至ることもあります。\n注射タイプのデメリットはワクチン注射と一緒に打てないところや、注射アレルギーが稀にあるところです。"],
        ["次のうち肥満と判断されるのはどれでしょう","24%","30%","35%","41%",3,"肥満の状態だと病気になりやすくなったり、足腰のけがにつながります。ただし、犬種によって理想的な体脂肪率が違うので自分で調べて見ましょう。\n判断方法は、肋骨あたりをグッと推すことで判断します。肋骨が確認できなかったら肥満です。"],
        ["次のうち痩せすぎと判断されるのはどれでしょう","3%","5%","14%","21%",2,"痩せている状態だと、病気になってご飯が食べられない時にエネルギーがなくなり苦しい闘病生活になります。ただし、犬種によって理想的な体脂肪率が違うので自分で調べて見ましょう。\n判断方法は、肋骨あたりをグッと押すことで判断します。撫でただけで肋骨が確認できたら痩せすぎです。"],
        ["ノミ,ダニの予防接種を打つのはどれくらいの頻度ですれば良いでしょう","1ヶ月に1回(9ヶ月間)","1ヶ月に1回(1年中)","3ヶ月に1回(春夏秋の間)","半年に1回",2,"痒み,湿疹(ポツポツができる)などの症状が発症します。また、人にも被害が出るので予防接種をしましょう。"],
        ]
    
    a=0
    r.shuffle(quiz_list)
    
    #問題のタイトルの表示
    true=0
    quiz=quiz_list[0]
    label=tk.Label(frame,text="[問題"+str(a+1)+"]\n"+quiz[0])
    label.pack()
        
    for b in range(4):#解答を４回だす
        b+=1
        clic=tk.Button(frame,text=str(b)+":"+quiz[b])
        clic["command"]=D_inu1(b,quiz_list,a,true)
        clic.pack(fill="x")
        
def E_neko1(user,quiz_listA,kaisu,true):
    kaisuA=kaisu
    def E_neko1_1():
        nonlocal kaisuA
        trueA=true
        #6問出すまで続ける
        if kaisuA<5:
            quizA=quiz_listA[kaisuA]
            ans=quizA[5]
            #答え合わせ
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text="正解！\n"+quizA[6])
                label.pack()
                
            else:
                label=tk.Label(frame,text="不正解...正解は"+quizA[ans]+"\n"+quizA[6])
                label.pack()
                

            #問題を出す
            kaisuA+=1
            quizA=quiz_listA[kaisuA]
            label=tk.Label(frame,text="[問題"+str(kaisuA+1)+"]\n"+quizA[0])
            label.pack()

            for b in range(4):#選択肢を４回だす
                b+=1
                clic=tk.Button(frame,text=str(b)+":"+quizA[b])
                clic["command"]=D_neko1(b,quiz_listA,kaisuA,trueA,)
                clic.pack(fill="x")

        else:
            quizA=quiz_listA[kaisuA]
            ans=quizA[5]
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text="正解！\n"+quizA[6])
                label.pack()
                
            else:
                label=tk.Label(frame,text="不正解...正解は"+quizA[ans]+"\n"+quizA[6])
                label.pack()
            
            label=tk.Label(frame,text="あなたの成績は...6問中"+str(trueA)+"問正解です。")
            label.pack()
            clic=tk.Button(frame,text="終了する",command=fin)
            clic.pack(fill="x")

    #呼び出し元へ戻る
    return E_neko1_1

def E_neko():
    quiz_list=[
        ["食べさせてはいけない食べ物は次のうちどれでしょう","アワビ","ハマグリ","しじみ","ホタテ",1,"アワビの肝に含まれる「ピロフェオホルバイド」という成分が光線過敏症を引き起こしてしまい、悪化すると耳が壊死して取れてしまうこともあります。"],
        ["食べ過ぎる危険な食べ物は次のうちどれでしょう","ダコ","イクラ","イカ","たらこ",3,"イカの内臓には猫にとって必要なビタミンB1を壊してしまう酵素が含まれているからです。"],
        ["絶対に食べさせてはいけないお菓子は次のうちどれでしょう","飴","グミ","ポテトチップス","チョコレート",4,"体が興奮業態になり、心臓の鼓動が早くなり死亡してしまうからです。"],
        ["絶対に食べさせてはいけない種類は次のうちどれでしょう","豆類(枝豆,豆腐など)","葉類(キャベツ,レタスなど)","ネギ類(玉ねぎ,ニラなど)","根類(人参,ごぼうなど)",3,"血液が溶ける病気になってしまい、死亡してしまうからです。"],
        ["絶対に食べさせてはいけない野菜は次のうちどれでしょう","アボカド","きゅうり","もやし","トマト",1,"ペルジンという猫に有害な物質が胃腸障害痙攣を発症してしまい、死亡してしまうからです。"],
        ["大量に長期間食べさせてはいけない食べ物は次のうちどれでしょう","マグロ","かつお節","かつおダシ","煮干し",1,"マグロやサバやイワシなどの青魚を大量に長期間食べてしまうと、「黄色脂肪症」になってしまい発熱や強い痛みを引き起こしてしまうからです。"],
        ["食べさせてはいけない食べ物は次のうちどれでしょう","風船ガム","キシリトール","せんべい","クッキー",2,"少量でも接種すると血糖値が低下し、嘔吐,歩行困難,内出血,肝不全が発症し死亡する可能性があるからです。"],
        ["食べさせてはいけない食べ物は次のうちどれでしょう","ヤシの実","セロリ","アロエ","マカダミアナッツ",4,"無気力,嘔吐,異常な熱,筋硬直,震え,心拍数の増加などの症状が摂取後、\n12時間以内に現れ12~48時間続き、最悪死亡してしまうからです。"],
        ["猫があまり感じにくいと言われている味覚は次のうちどれでしょう","塩味","甘味","苦味","酸味",2,"猫は肉食に特化していて、甘いものは食て来なかったからです。(諸説あり)"],
        ["絶対に飲ませてはいけない飲み物は次のうちどれでしょう","オレンジジュース","お酒","トマトジュース","炭酸ジュース",2,"下痢,嘔吐,中枢神経の抑制,震え,昏睡などの症状が出るからです。"],
        ["絶対に食べさせてはいけない食べ物はどれでしょう","サプリメント","みかん","もも","パイナップル",1,"サプリメントの他にも栄養補助食品,人間用の医薬品などがあり、1錠でも強い中毒を引き起こし最悪死亡してしまいます。\n症状は多岐にわたり、目に見えない症状もあるため誤飲があったらすぐに獣医さんに相談しましょう。"],
        ]
    
    a=0
    r.shuffle(quiz_list)

    #問題のタイトルの表示
    true=0
    quiz=quiz_list[0]
    label=tk.Label(frame,text="[問題"+str(a+1)+"]\n"+quiz[0])
    label.pack()
        
    for b in range(4):#解答を４回だす
        b+=1
        clic=tk.Button(frame,text=str(b)+":"+quiz[b])
        clic["command"]=E_neko1(b,quiz_list,a,true)
        clic.pack(fill="x")

def E_inu1(user,quiz_listA,kaisu,true):
    kaisuA=kaisu
    def E_inu1_1():
        nonlocal kaisuA
        trueA=true
        #6問出すまで続ける
        if kaisuA<5:
            quizA=quiz_listA[kaisuA]
            ans=quizA[5]
            #答え合わせ
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text="正解！\n"+quizA[6])
                label.pack()
                
            else:
                label=tk.Label(frame,text="不正解...正解は"+quizA[ans]+"\n"+quizA[6])
                label.pack()
                

            #問題を出す
            kaisuA+=1
            quizA=quiz_listA[kaisuA]
            label=tk.Label(frame,text="[問題"+str(kaisuA+1)+"]\n"+quizA[0])
            label.pack()

            for b in range(4):#選択肢を４回だす
                b+=1
                clic=tk.Button(frame,text=str(b)+":"+quizA[b])
                clic["command"]=E_inu1(b,quiz_listA,kaisuA,trueA,)
                clic.pack(fill="x")

        else:
            quizA=quiz_listA[kaisuA]
            ans=quizA[5]
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text="正解！\n"+quizA[6])
                label.pack()
                
            else:
                label=tk.Label(frame,text="不正解...正解は"+quizA[ans]+"\n"+quizA[6])
                label.pack()
            
            label=tk.Label(frame,text="あなたの成績は...6問中"+str(trueA)+"問正解です。")
            label.pack()
            clic=tk.Button(frame,text="終了する",command=fin)
            clic.pack(fill="x")

    #呼び出し元へ戻る
    return E_inu1_1

def E_inu():
    quiz_list=[
        ["絶対に食べさせてはいけない果物は次のうちどれでしょう","りんご","ぶどう","バナナ","メロン",2,"腎不全になり最悪1日で死亡してしまう上に、原因はまだ分かっていません。"],
        ["絶対に食べさせてはいけないお菓子は次のうちどれでしょう","飴","グミ","ポテトチップス","チョコレート",4,"体が興奮業態になり、心臓の鼓動が早くなり死亡してしまうからです。"],
        ["絶対に食べさせてはいけない野菜は次のうちどれでしょう","アボカド","きゅうり","もやし","トマト",1,"ペルジンという犬に有害な物質が胃腸障害痙攣を発症してしまい、死亡してしまうから。"],
        ["絶対に食べさせてはいけない種類は次のうちどれでしょう","豆類(枝豆,豆腐など)","葉類(キャベツ,レタスなど)","ネギ類(玉ねぎ,ニラなど)","根類(人参,ごぼうなど)",3,"血液が溶ける病気になってしまい、死亡してしまうからです。"],
        ["絶対に飲ませてはいけない飲み物は次のうちどれでしょう","オレンジジュース","お酒","トマトジュース","炭酸ジュース",2,"下痢,嘔吐,中枢神経の抑制,震え,昏睡などの症状が出るからです。"],
        ["犬が食べても感じにくいとされえている味覚は次のうちどれでしょう","甘味","塩味","苦味","辛味",1,"犬は雑食動物として進化してきたため、甘い果物も食べてきたからです。(諸説あり)"],
        ["絶対に食べさせてはいけない海産物は次のうちどれでしょう","青魚系(さんま,アジなど)","甲殻類(えび,かになど)","海藻類(わかめ,こんぶなど)","貝類(あさり,ホタテなど)",2,"大量にあげると神経麻痺を起こす可能性があるからです。"],
        ["食べさせてはいけない食べ物は次のうちどれでしょう","野生の木の実","野生のタケノコ","野生のキノコ","野生の山菜",3,"キノコには様々な種類があり、どのような症状が出る分からないからです。"],
        ["食べさせてはいけない食べ物はなんでしょう","タピオカジュース","ゆで卵","コーヒー,紅茶","ヘチマ,ウリ",3,"カフェイン中毒により興奮状態になり心臓の鼓動が早くなり死亡してしまうからです。"],
        ["食べさせすぎるといけない食べ物は次のうちどれでしょう","大豆製品(人用)","乳製品(人用)","魚製品(人用)","乳製品(動物用)",2,"胃腸障害で便が緩くなり下痢になるからです。"],
        ["食べさせてはいけない食べ物は次のうちどれでしょう","ヤシの実","セロリ","アロエ","マカダミアナッツ",4,"無気力,嘔吐,異常な熱,筋硬直,震え,心拍数の増加などの症状が摂取後、\n12時間以内に現れ12~48時間続き、最悪死亡してしまうからです。"],
        ["食べさせてはいけない食べ物は次のうちどれでしょう","風船ガム","キシリトール","せんべい","クッキー",2,"少量でも接種すると血糖値が低下し、嘔吐,歩行困難,内出血,肝不全が発症し死亡する可能性があるからです。"],
        ["絶対に食べさせてはいけない食べ物はどれでしょう","サプリメント","みかん","もも","パイナップル",1,"サプリメントの他にも栄養補助食品,人間用の医薬品などがあり、1錠でも強い中毒を引き起こし最悪死亡してしまいます。\n症状は多岐にわたり、目に見えない症状もあるため誤飲があったらすぐに獣医さんに相談しましょう。"],
        ]
    
    a=0
    r.shuffle(quiz_list)

    #問題のタイトルの表示
    true=0
    quiz=quiz_list[0]
    label=tk.Label(frame,text="[問題"+str(a+1)+"]\n"+quiz[0])
    label.pack()
        
    for b in range(4):#解答を４回だす
        b+=1
        clic=tk.Button(frame,text=str(b)+":"+quiz[b])
        clic["command"]=E_inu1(b,quiz_list,a,true)
        clic.pack(fill="x")

def F_neko1(user,quiz_listA,kaisu,true):
    kaisuA=kaisu
    def F_neko1_1():
        nonlocal kaisuA
        trueA=true
        if kaisuA<5:
            quizA=quiz_listA[kaisuA]
            ans=quizA[3]
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text=quizA[4])
                label.pack()
                
            else:
                label=tk.Label(frame,text=quizA[4])
                label.pack()
                

            #問題を出す
            kaisuA+=1
            quizA=quiz_listA[kaisuA]
            label=tk.Label(frame,text="[問題"+str(kaisuA+1)+"]\n"+quizA[0])
            label.pack()

            for b in range(2):#選択肢を2個だす
                b+=1
                clic=tk.Button(frame,text=str(b)+":"+quizA[b])
                clic["command"]=F_neko1(b,quiz_listA,kaisuA,trueA,)
                clic.pack(fill="x")

        else:
            quizA=quiz_listA[kaisuA]
            ans=quizA[3]
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text=quizA[4])
                label.pack()
                
            else:
                label=tk.Label(frame,text=quizA[4])
                label.pack()
            
            label=tk.Label(frame,text="あなたの猫ちゃんは...6問中"+str(trueA)+"問当てはまります。")
            label.pack()
            clic=tk.Button(frame,text="終了する",command=fin)
            clic.pack(fill="x")

    #呼び出し元へ
    return F_neko1_1

def F_neko():
    quiz_list=[
        ["食欲は落ちていませんか？","落ちている","落ちていない",1,"食べることは動物の三大欲求の一つ。その食欲が落ちるのは何かのサインです。放置しておくと健康を害することにもつながります。"],
        ["飲むお水の量は減っていませんか？","減っている","減っていない",1,"体の水分量が減り、慢性的な脱水や腎機能障害などになり、毛がボソボソになったりします。"],
        ["歩き方に異変はありませんか？","ある","ない",1,"アスファルトやフローリングの上を歩く犬たちの、関節の疾患。「痛い」と言えない彼らのために、日々歩き方をチェックしましょう！"],
        ["呼吸に異変はありませんか？","ある","ない",1,"呼吸するたびにゼーゼーしたり、普段と変わった呼吸の仕方をしていませんか？\n寝ている時、起きている時、散歩中など、シーンや気温によって呼吸の方法は異なります。普段と変わったところがないかしっかりチェックしましょう！"],
        ["排泄物(量,仕方,匂い,色,回数,硬さ)に異変はありませんか？","ある","ない",1,"人と比べて食の多様性がない猫たちは、排泄物に体調の変化や精神的なストレスが現れやすくなります。シートの交換時によくチェックしましょう！"],
        ["急激な体型,体重の変化はありませんか？","ある","ない",1,"病気の影響で、体重が急激に増えたり減ったりすることがあります。１〜２週間に１回ほどのペースで体重をチェックするといいでしょう。"],
        ["水を飲む量が増えたり、尿の量が増えたりしていませんか？","増えた","増えてない",1,"シニア猫の代表的疾患として、糖尿病,慢性腎機能障害といった疾患があります。水を飲む姿が以前よりも頻繁に見られるようなら、1度獣医さんに相談して見ましょう。"],
        ["食事の時に顔を傾けたり、よくこぼしたりしていませんか？","している","してない",1,"口内炎や歯周病かもしれません。食べ物を食べやすいものに切り替えてあげましょう。"],
        ["落ち着きがなく家の中で歩き回ったり、ドアの前で立ちすくんだりしていませんか？","している","していない",1,"認知症の症状の一つです。他にもトイレの失敗や、よく知っている人や物に対して異常な反応をしたりします。\nそんな症状を見たら獣医さんに相談してみましょう。"],
        ]
    
    a=0
    r.shuffle(quiz_list)
    
    #問題のタイトルの表示
    true=0
    quiz=quiz_list[0]
    label=tk.Label(frame,text="[問題"+str(a+1)+"]\n"+quiz[0])
    label.pack()
        
    for b in range(2):#選択肢を2個だす
        b+=1
        clic=tk.Button(frame,text=str(b)+":"+quiz[b])
        clic["command"]=F_neko1(b,quiz_list,a,true)
        clic.pack(fill="x")

def F_inu1(user,quiz_listA,kaisu,true):
    kaisuA=kaisu
    def F_inu1_1():
        nonlocal kaisuA
        trueA=true
        if kaisuA<5:
            quizA=quiz_listA[kaisuA]
            ans=quizA[3]
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text=quizA[4])
                label.pack()
                
            else:
                label=tk.Label(frame,text=quizA[4])
                label.pack()                

            #問題を出す
            kaisuA+=1
            quizA=quiz_listA[kaisuA]
            label=tk.Label(frame,text="[問題"+str(kaisuA+1)+"]\n"+quizA[0])
            label.pack()

            for b in range(2):#選択肢を2個だす
                b+=1
                clic=tk.Button(frame,text=str(b)+":"+quizA[b])
                clic["command"]=F_inu1(b,quiz_listA,kaisuA,trueA,)
                clic.pack(fill="x")

        else:
            quizA=quiz_listA[kaisuA]
            ans=quizA[3]
            if user==ans:
                trueA=trueA+1
                label=tk.Label(frame,text=quizA[4])
                label.pack()
                
            else:
                label=tk.Label(frame,text=quizA[4])
                label.pack()
            
            label=tk.Label(frame,text="あなたの愛犬は...6問中"+str(trueA)+"問当てはまります。")
            label.pack()
            clic=tk.Button(frame,text="終了する",command=fin)
            clic.pack(fill="x")

    #呼び出し元へ
    return F_inu1_1

def F_inu():
    quiz_list=[
        ["食欲は落ちていませんか？","落ちている","落ちていない",1,"食べることは動物の三大欲求の一つ。その食欲が落ちるのは何かのサインです。放置しておくと健康を害することにもつながります。"],
        ["飲むお水の量は減っていませんか？","減っている","落ちてていない",1,"老化のせいで飲む水の量が減るということはあるが、極端に飲まないと病気だったり衰弱していたりする可能性もあります。\n行動をよく見て異変を感じたら獣医さんに相談しましょう。"],
        ["歩き方に異変はありませんか？","ある","ない",1,"アスファルトやフローリングの上を歩く犬たちの、関節の疾患。「痛い」と言えない彼らのために、日々歩き方をチェックしましょう！"],
        ["呼吸に異変はありませんか？","ある","ない",1,"呼吸するたびにゼーゼーしたり、普段と変わった呼吸の仕方をしていませんか？\n寝ている時、起きている時、散歩中など、シーンや気温によって呼吸の方法は異なります。普段と変わったところがないかしっかりチェックしましょう！"],
        ["排泄物(量,仕方,匂い,色,回数,硬さ)に異変はありませんか？","ある","ない",1,"人と比べて食の多様性がない犬たちは、排泄物に体調の変化や精神的なストレスが現れやすくなります。シートの交換時によくチェックしましょう！"],
        ["急激な体型,体重の変化はありませんか？","ある","ない",1,"病気の影響で、体重が急激に増えたり減ったりすることがあります。１〜２週間に１回ほどのペースで体重をチェックするといいでしょう。"],
        ["食べ物の好みが変わっていませんか？","変わった","変わってない",1,"病気等が原因の場合があります。老化と決めつけずに他にも変わった事がないかチェックしましょう。"],
        ["ご飯を食べる量が減った、または食べないということはありませんか？","ある","ない",1,"老化とともに嗅覚,味覚,歯の衰え,消化の衰え,筋力の衰えなどが起こります。そのため、食べる事が辛くなっているのかもしれません。よく見て原因を取り除いてあげましょう。\nまた、食欲不足は病気が原因のケースも多くありますので、獣医さんに相談してみましょう。"],
        ["昼まま眠っていて夜起きだすというように昼夜が逆転し、徘徊したり夜泣きしたりしませんか？","する","しない",1,"認知症の症状の1つです。他にも、ぐるぐる同じところを回ったり、トイレの失敗を繰り返したりなどがあります。獣医さんに相談してみましょう。"],
        ]
    
    a=0
    r.shuffle(quiz_list)
    
    #問題のタイトルの表示
    true=0
    quiz=quiz_list[0]
    label=tk.Label(frame,text="[問題"+str(a+1)+"]\n"+quiz[0])
    label.pack()
        
    for b in range(2):#はい,いいえを出す
        b+=1
        clic=tk.Button(frame,text=str(b)+":"+quiz[b])
        clic["command"]=F_inu1(b,quiz_list,a,true)
        clic.pack(fill="x")

def start():
    label=tk.Label(frame,text="あなたが知りたいことはなんですか？")
    label.pack()

    clicA=tk.Button(frame,text=("予防について"))
    clicA["command"]=A
    clicA.pack(fill="x")

    clicB=tk.Button(frame,text=("食事について"))
    clicB["command"]=B
    clicB.pack(fill="x")

    clicC=tk.Button(frame,text=("老化度のチェック"))
    clicC["command"]=C
    clicC.pack(fill="x")

def fin():win.destroy()

#ウィンドウを作成
win=tk.Tk()
win.title("犬猫の豊かな暮らし")
win.geometry("2000x1000")

#スタートボタンの作成
clic=tk.Button(win,text="Game Start",command=start)
clic.pack(fill="x")

#キャンバスの作成
canvas=tk.Canvas(win,width=1660,height=2000)
canvas.pack()

#スクロールバーの表示
Scl=tk.Scrollbar(win)
Scl.pack(side=tk.RIGHT,fill="y")
Scl.config(command=canvas.yview)

#キャンバスwidgetの配置
canvas.config(yscrollcommand=Scl.set)
canvas.config(scrollregion=(0,0,200,1300))
canvas.pack(side=tk.LEFT,fill=tk.BOTH)

#フレームの生成
frame=tk.Frame(canvas)

#フレームをキャンバスに配置
canvas.create_window((0,0),window=frame,anchor=tk.NW,width=canvas.cget("width"))

#メインループを実行
win.mainloop()
